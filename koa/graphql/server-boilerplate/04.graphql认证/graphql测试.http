@url = http://localhost:4000/graphql
@tokenAuth = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjdiYzAzMjA3LTA1ZTMtNDVjMy05NDM0LWU1YzJjOWE3ZjBmMyIsImlhdCI6MTYwNjAyNDQ0NX0.EG9vlh-eFpGDA2UjvTLUle_mhFS9myd4HstXFvGvebk
### 测试 signup 注册用户, 返回的是一个 token 字符串
POST {{url}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenAuth}}
X-Request-Type: GraphQL

mutation{
    signup(username: "赵敏", email: "zhaomin@163.com", password: "123"){
        username
    }
}


### 查询所有注册用户

POST {{url}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenAuth}}
X-Request-Type: GraphQL
Date: {{$localDatetime rfc1123}}

{
    meUnauth{
        username
        email
    }
}
### 测试登录
# @name login
POST {{url}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenAuth}}
X-Request-Type: GraphQL

mutation{
    login(email: "zhaomin@163.com", password: "123"){
        username
        token
    }
}

### 测试认证中间件
@token = {{login.response.headers.token}}
POST {{url}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenAuth}}
X-Request-Type: GraphQL

{
    me{
         id
        username
        email
        password
    }
}

